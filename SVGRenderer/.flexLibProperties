<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<flexLibProperties includeAllClasses="false" useMultiPlatformConfig="false" version="3">
  <includeClasses>
    <classEntry path="com.lorentz.SVG.data.AssetManager"/>
    <classEntry path="com.lorentz.SVG.data.MarkerPlace"/>
    <classEntry path="com.lorentz.SVG.data.MarkerType"/>
    <classEntry path="com.lorentz.SVG.data.filters.ISVGFilter"/>
    <classEntry path="com.lorentz.SVG.data.filters.SVGFilterCollection"/>
    <classEntry path="com.lorentz.SVG.data.filters.SVGGaussianBlur"/>
    <classEntry path="com.lorentz.SVG.data.gradients.SVGGradient"/>
    <classEntry path="com.lorentz.SVG.data.gradients.SVGLinearGradient"/>
    <classEntry path="com.lorentz.SVG.data.gradients.SVGRadialGradient"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGArcToCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGClosePathCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGCurveToCubicCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGCurveToCubicSmoothCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGCurveToQuadraticCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGCurveToQuadraticSmoothCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGLineToCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGLineToHorizontalCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGLineToVerticalCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGMoveToCommand"/>
    <classEntry path="com.lorentz.SVG.data.path.SVGPathCommand"/>
    <classEntry path="com.lorentz.SVG.data.style.StyleDeclaration"/>
    <classEntry path="com.lorentz.SVG.data.text.SVGDrawnText"/>
    <classEntry path="com.lorentz.SVG.data.text.SVGTextToDraw"/>
    <classEntry path="com.lorentz.SVG.display.SVG"/>
    <classEntry path="com.lorentz.SVG.display.SVGA"/>
    <classEntry path="com.lorentz.SVG.display.SVGAnimate"/>
    <classEntry path="com.lorentz.SVG.display.SVGAnimateMotion"/>
    <classEntry path="com.lorentz.SVG.display.SVGAnimateTransform"/>
    <classEntry path="com.lorentz.SVG.display.SVGCircle"/>
    <classEntry path="com.lorentz.SVG.display.SVGClipPath"/>
    <classEntry path="com.lorentz.SVG.display.SVGDocument"/>
    <classEntry path="com.lorentz.SVG.display.SVGEllipse"/>
    <classEntry path="com.lorentz.SVG.display.SVGG"/>
    <classEntry path="com.lorentz.SVG.display.SVGImage"/>
    <classEntry path="com.lorentz.SVG.display.SVGLine"/>
    <classEntry path="com.lorentz.SVG.display.SVGMarker"/>
    <classEntry path="com.lorentz.SVG.display.SVGMask"/>
    <classEntry path="com.lorentz.SVG.display.SVGPath"/>
    <classEntry path="com.lorentz.SVG.display.SVGPattern"/>
    <classEntry path="com.lorentz.SVG.display.SVGPolygon"/>
    <classEntry path="com.lorentz.SVG.display.SVGPolyline"/>
    <classEntry path="com.lorentz.SVG.display.SVGRect"/>
    <classEntry path="com.lorentz.SVG.display.SVGSwitch"/>
    <classEntry path="com.lorentz.SVG.display.SVGSymbol"/>
    <classEntry path="com.lorentz.SVG.display.SVGTSpan"/>
    <classEntry path="com.lorentz.SVG.display.SVGText"/>
    <classEntry path="com.lorentz.SVG.display.SVGUse"/>
    <classEntry path="com.lorentz.SVG.display.base.ISVGPreserveAspectRatio"/>
    <classEntry path="com.lorentz.SVG.display.base.ISVGViewBox"/>
    <classEntry path="com.lorentz.SVG.display.base.ISVGViewPort"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGContainer"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGElement"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGGraphicsElement"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGPContainer"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGShape"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGSpanContainer"/>
    <classEntry path="com.lorentz.SVG.display.base.SVGTextContainer"/>
    <classEntry path="com.lorentz.SVG.display.foreign.SVGForeignAudio"/>
    <classEntry path="com.lorentz.SVG.display.foreign.SVGForeignObject"/>
    <classEntry path="com.lorentz.SVG.display.foreign.SVGForeignP"/>
    <classEntry path="com.lorentz.SVG.display.foreign.SVGForeignSpan"/>
    <classEntry path="com.lorentz.SVG.display.foreign.SVGForeignTextArea"/>
    <classEntry path="com.lorentz.SVG.drawing.DashedDrawer"/>
    <classEntry path="com.lorentz.SVG.drawing.GraphicsDrawer"/>
    <classEntry path="com.lorentz.SVG.drawing.GraphicsPathDrawer"/>
    <classEntry path="com.lorentz.SVG.drawing.IDrawer"/>
    <classEntry path="com.lorentz.SVG.drawing.MarkersPlacesCapturerDrawer"/>
    <classEntry path="com.lorentz.SVG.drawing.SVGPathRenderer"/>
    <classEntry path="com.lorentz.SVG.events.SVGEvent"/>
    <classEntry path="com.lorentz.SVG.events.StyleDeclarationEvent"/>
    <classEntry path="com.lorentz.SVG.parser.AsyncSVGParser"/>
    <classEntry path="com.lorentz.SVG.parser.SVGParserCommon"/>
    <classEntry path="com.lorentz.SVG.parser.VisitDefinition"/>
    <classEntry path="com.lorentz.SVG.text.FTESVGTextDrawer"/>
    <classEntry path="com.lorentz.SVG.text.ISVGTextDrawer"/>
    <classEntry path="com.lorentz.SVG.text.TextFieldSVGTextDrawer"/>
    <classEntry path="com.lorentz.SVG.utils.ArcUtils"/>
    <classEntry path="com.lorentz.SVG.utils.Base64AsyncDecoder"/>
    <classEntry path="com.lorentz.SVG.utils.Bezier"/>
    <classEntry path="com.lorentz.SVG.utils.DisplayUtils"/>
    <classEntry path="com.lorentz.SVG.utils.FlashPlayerUtils"/>
    <classEntry path="com.lorentz.SVG.utils.ICloneable"/>
    <classEntry path="com.lorentz.SVG.utils.MathUtils"/>
    <classEntry path="com.lorentz.SVG.utils.SVGColorUtils"/>
    <classEntry path="com.lorentz.SVG.utils.SVGUtil"/>
    <classEntry path="com.lorentz.SVG.utils.SVGViewPortUtils"/>
    <classEntry path="com.lorentz.SVG.utils.StringUtil"/>
    <classEntry path="com.lorentz.SVG.utils.TextUtils"/>
    <classEntry path="com.lorentz.processing.IProcess"/>
    <classEntry path="com.lorentz.processing.Process"/>
    <classEntry path="com.lorentz.processing.ProcessExecutor"/>
    <classEntry path="org.assetloader.AssetLoader"/>
    <classEntry path="org.assetloader.base.AbstractLoader"/>
    <classEntry path="org.assetloader.base.AssetLoaderBase"/>
    <classEntry path="org.assetloader.base.AssetLoaderError"/>
    <classEntry path="org.assetloader.base.AssetType"/>
    <classEntry path="org.assetloader.base.LoaderFactory"/>
    <classEntry path="org.assetloader.base.LoaderStats"/>
    <classEntry path="org.assetloader.base.Param"/>
    <classEntry path="org.assetloader.base.StatsMonitor"/>
    <classEntry path="org.assetloader.core.IAssetLoader"/>
    <classEntry path="org.assetloader.core.IConfigParser"/>
    <classEntry path="org.assetloader.core.ILoadStats"/>
    <classEntry path="org.assetloader.core.ILoader"/>
    <classEntry path="org.assetloader.core.IParam"/>
    <classEntry path="org.assetloader.loaders.BaseLoader"/>
    <classEntry path="org.assetloader.loaders.BinaryLoader"/>
    <classEntry path="org.assetloader.loaders.CSSLoader"/>
    <classEntry path="org.assetloader.loaders.DisplayObjectLoader"/>
    <classEntry path="org.assetloader.loaders.ImageLoader"/>
    <classEntry path="org.assetloader.loaders.JSONLoader"/>
    <classEntry path="org.assetloader.loaders.SWFLoader"/>
    <classEntry path="org.assetloader.loaders.SoundLoader"/>
    <classEntry path="org.assetloader.loaders.TextLoader"/>
    <classEntry path="org.assetloader.loaders.VideoLoader"/>
    <classEntry path="org.assetloader.loaders.XMLLoader"/>
    <classEntry path="org.assetloader.parsers.URLParser"/>
    <classEntry path="org.assetloader.parsers.XmlConfigParser"/>
    <classEntry path="org.assetloader.signals.ErrorSignal"/>
    <classEntry path="org.assetloader.signals.HttpStatusSignal"/>
    <classEntry path="org.assetloader.signals.LoaderSignal"/>
    <classEntry path="org.assetloader.signals.NetStatusSignal"/>
    <classEntry path="org.assetloader.signals.ProgressSignal"/>
    <classEntry path="org.assetloader.utils.ALLogger"/>
    <classEntry path="org.assetloader.utils.Inspector"/>
  </includeClasses>
  <includeResources/>
  <namespaceManifests/>
</flexLibProperties>
